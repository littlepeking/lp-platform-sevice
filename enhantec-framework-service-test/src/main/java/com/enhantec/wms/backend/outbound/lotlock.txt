
CREATE TABLE WMWHSE1.LOTLOCK(
SERIALKEY INT IDENTITY(1,1) not null
,WHSEID NVARCHAR (30) default SYSTEM_USER not null
,LOT NVARCHAR (50) not null
,PROJECTID NVARCHAR (200)
,LOCKQTY DECIMAL (22,5) default 0 not null
,RECEIVEDQTY DECIMAL (22,5) default 0 not null
,SHIPPEDQTY DECIMAL (22,5) default 0 not null
,ADDDATE DATETIME default getutcdate() not null
,ADDWHO NVARCHAR (30) default SYSTEM_USER not null
,EDITDATE DATETIME default getutcdate() not null
,EDITWHO NVARCHAR (30) default SYSTEM_USER not null
);



DROP view WMWHSE1.V_RECEIPTLOT_AVAILQTY;
CREATE view WMWHSE1.V_RECEIPTLOT_AVAILQTY as
--current receipt lot avalable qty = available qty in lotxlocxid - actual locked qty in lotlock - hold qty which is not allocated or picked.
SELECT
	A.RECEIPTLOT,
	A.SKU,
	B.DESCR,
	SUM(C.QTY) QTY,
	SUM(C.QTYALLOCATED) ALLOCATEDQTY ,
	SUM(C.QTYPICKED) PICKEDQTY,
	SUM(CASE C.STATUS WHEN 'HOLD' THEN C.QTY-C.QTYALLOCATED-C.QTYPICKED ELSE 0 END) AS HOLDQTY,
	SUM(CASE WHEN
			ISNULL(L.LOCKQTY,0)  > ISNULL(E.TOTALUSEDQTY,0)
		THEN
			ISNULL(L.LOCKQTY,0)  - ISNULL(E.TOTALUSEDQTY,0)
		ELSE 0 END
	) CURRENTLOCKEDQTY, --目前實際鎖定的LOTXLOCXID中可用庫存的數量
	SUM(C.QTY - C.QTYALLOCATED - C.QTYPICKED -
	(CASE C.STATUS WHEN 'HOLD' THEN C.QTY-C.QTYALLOCATED-C.QTYPICKED ELSE 0 END) -
	(CASE WHEN ISNULL(L.LOCKQTY,0)  > ISNULL(E.TOTALUSEDQTY,0)	THEN ISNULL(L.LOCKQTY,0)  - ISNULL(E.TOTALUSEDQTY,0) ELSE 0 END)) AVAILABLEQTY
FROM
	wmwhse1.SKU B,
	wmwhse1.LOTXLOCXID C,
	wmwhse1.LOTATTRIBUTE D,
	(SELECT
		DISTINCT RECEIPTLOT,SKU
	FROM
	wmwhse1.PRERECEIPTCHECK) A
LEFT JOIN wmwhse1.LOTLOCK L
 ON A.RECEIPTLOT = L.LOT
LEFT JOIN wmwhse1.V_PROJECT_RECEIPTLOT_USED E
 ON A.RECEIPTLOT = E.LOT
WHERE
	A.SKU = B.SKU
	AND C.LOT = D.LOT
	AND A.RECEIPTLOT = D.LOTTABLE06
	AND C.QTY>0
GROUP BY
	A.RECEIPTLOT,
	A.SKU,
	B.DESCR



DROP view WMWHSE1.V_PROJECT_RECEIPTLOT_ACTUAL_LOCKEDQTY;
CREATE view WMWHSE1.V_PROJECT_RECEIPTLOT_ACTUAL_LOCKEDQTY as
--Current actual locked qty for specific project and receipt lot, BUT NOT make sure inventory has the available qty
--The reason to connect LOTXLOCXID is to narrow down the records only reflect the existing qty in inventory
--No need grouy by and sum as PROJECTID+LOT make sure the row is unique in lotlock
SELECT
	L.PROJECTID,
	L.LOT,
	C.SKU,
	(CASE WHEN
			ISNULL(L.LOCKQTY,0)  > ISNULL(E.TOTALUSEDQTY,0)
		THEN
			ISNULL(L.LOCKQTY,0)  - ISNULL(E.TOTALUSEDQTY,0)
		ELSE 0 END
	) CURRENTLOCKEDQTY --目前實際鎖定的LOTXLOCXID中可用庫存的數量
FROM
	wmwhse1.LOTXLOCXID C,
	wmwhse1.LOTATTRIBUTE D,
    wmwhse1.LOTLOCK L
LEFT JOIN wmwhse1.V_PROJECT_RECEIPTLOT_USED E
 ON L.LOT = E.LOT
 AND L.PROJECTID = E.PROJECTID
WHERE
	C.LOT = D.LOT
	AND L.LOT = D.LOTTABLE06
	AND C.QTY>0


DROP VIEW wmwhse1.V_PROJECT_RECEIPTLOT_USED;
CREATE VIEW wmwhse1.V_PROJECT_RECEIPTLOT_USED AS
SELECT
	la.LOTTABLE06 LOT,
	o.SUSR3 PROJECTID,


	SUM(pd.QTY) TOTALUSEDQTY,
	SUM(CASE WHEN pd.STATUS<5 THEN pd.QTY ELSE 0 END) ALLOCATEDQTY,
	SUM(CASE WHEN pd.STATUS>=5 AND pd.STATUS<9 THEN pd.QTY ELSE 0 END) PICKEDEDQTY,
	SUM(CASE WHEN pd.STATUS>=5 AND pd.STATUS=9 THEN pd.QTY ELSE 0 END) SHIPPEDQTY
from
	wmwhse1.PICKDETAIL pd,
	wmwhse1.ORDERS o,
	wmwhse1.LOTATTRIBUTE la
where
	o.ORDERKEY  = pd.ORDERKEY
	and la.LOT = pd.LOT
	and o.SUSR3 IS NOT NULL
group by la.LOTTABLE06, o.SUSR3 --projectId


SELECT
	(CASE WHEN pd.STATUS<5 THEN pd.QTY ELSE 0 END) ALLOCATEDQTY,
	(CASE WHEN pd.STATUS>=5 AND pd.STATUS<9 THEN pd.QTY ELSE 0 END) PICKEDEDQTY,
	(CASE WHEN pd.STATUS>=5 AND pd.STATUS=9 THEN pd.QTY ELSE 0 END) SHIPPEDQTY
from
	wmwhse1.PICKDETAIL pd,
	wmwhse1.ORDERDETAIL od
where
	pd.ORDERKEY = od.ORDERKEY
	and pd.ORDERLINENUMBER = od.ORDERLINENUMBER